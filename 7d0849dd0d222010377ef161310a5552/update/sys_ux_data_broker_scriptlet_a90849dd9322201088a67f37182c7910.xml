<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_data_broker_scriptlet">
    <sys_ux_data_broker_scriptlet action="INSERT_OR_UPDATE">
        <api_name>x_snc_lastship.Mock evam response for popular items</api_name>
        <description/>
        <mutates_server_data>false</mutates_server_data>
        <name>Mock evam response for popular items</name>
        <output_schema/>
        <private>false</private>
        <props>[&#13;
{&#13;
"name":"graphqlData",&#13;
"label":"Return object of popular items",&#13;
"description":"",&#13;
"readOnly":false,&#13;
"fieldType":"object",&#13;
"mandatory":true,&#13;
"defaultValue":""&#13;
}&#13;
]</props>
        <required_translations>[{"message":"Return object of popular items","comment":""}]</required_translations>
        <schema_version>1.0.0</schema_version>
        <script><![CDATA[function transform(input) {
    var response = {
        "page_cursor": "",
        "page_size": 3,
        "page_number": 0,
        "is_last_page": true,
        "all_actions": [{
            "assignmentId": "d46f400473211010c342d5fdbdf6a7cf",
            "name": "navigation",
            "label": "Navigation",
            "actionType": "uxf_client_action",
            "actionDispatch": "NAVIGATION",
            "actionPayload": "{\r\n        \"table\": \"{{table}}\",\r\n        \"sysId\": \"{{sys_id}}\",\r\n        \"url\": \"{{navigation_url}}\"\r\n}"
        }],
        "selected_filter": "",
        "items": [],
        "available_filters": [{
            "sys_id": "",
            "label": "Default"
        }]
    };

    function cloneObj(obj) {
        var clone = {};
        for (var key in obj) {
            if (typeof(obj[key]) == "object" && obj[key] != null)
                clone[key] = cloneObj(obj[key]);
            else
                clone[key] = obj[key];
        }
        return clone;
    }
    var item_template = {
        "template": "now-card-evam-record",
        "propValues": {
            "titleLabel": "",
            "imageURL": "",
            "detailValueOne": "",
            "detailValueTwo": "",
			"highlightedHeaderBkgColor": "low",
            "imageType": "image",
            "detailLabelOne": "Available",
            "detailLabelTwo": "Location",
            "clickAction": {
                "assignmentId": "d46f400473211010c342d5fdbdf6a7cf",
                "name": "navigation",
                "label": "Navigation",
                "actionType": "uxf_client_action",
                "icon": "",
                "buttonType": "primary",
                "actionDispatch": "NAVIGATION",
                "serverScript": "",
                "confirmationRequired": false,
                "confirmationMessage": "",
                "actionPayload": {
                    "table": "x_snc_lastship_inventory_control",
                    "sysId": "",
                    "url": ""
                }
            },
            "model": {
                "name": "",
                "image": "",
                "in_stock": "",
                "stock_location.name": "",
                "sysId": "",
                "sys_id": "",
                "table": "x_snc_lastship_inventory_control"
            }
        }
    };

    var item_count = input.graphqlData.data.GlideAggregateRecord_Query.aggregates.length;

    for (var i = 0; i < item_count && i < 3; i++) {

        response.items.push(cloneObj(item_template));

        var result = input.graphqlData.data.GlideAggregateRecord_Query.aggregates[i].groupBy[0]._query.GlideRecord_Query.x_snc_lastship_inventory_control._results[0];
        var item_sysid = input.graphqlData.data.GlideAggregateRecord_Query.aggregates[i].groupBy[0].value;
        var item_props = response.items[i].propValues;

        item_props.clickAction.actionPayload["sysId"] = item_sysid;
        item_props.model["sysId"] = item_sysid;
        item_props.model["sys_id"] = item_sysid;
        item_props["titleLabel"] = result.name.displayValue;
        item_props.model["name"] = result.name.displayValue;
		item_props["highlightedHeaderLabel"] = result.type.displayValue;
		item_props["type"] = result.type.displayValue;
        item_props["imageURL"] = result.image.displayValue;		
        item_props.model["image"] = result.image.displayValue;
        item_props["detailValueOne"] = result.in_stock.displayValue;
        item_props.model["in_stock"] = result.in_stock.displayValue;
        item_props["detailValueTwo"] = result.stock_location.displayValue;
        item_props.model["stock_location.name"] = result.stock_location.displayValue;

    }
    return response;
}]]></script>
        <sys_class_name>sys_ux_data_broker_scriptlet</sys_class_name>
        <sys_created_by>maint</sys_created_by>
        <sys_created_on>2021-02-24 12:25:51</sys_created_on>
        <sys_id>a90849dd9322201088a67f37182c7910</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Mock evam response for popular items</sys_name>
        <sys_package display_value="lastship" source="x_snc_lastship">7d0849dd0d222010377ef161310a5552</sys_package>
        <sys_policy/>
        <sys_scope display_value="lastship">7d0849dd0d222010377ef161310a5552</sys_scope>
        <sys_update_name>sys_ux_data_broker_scriptlet_a90849dd9322201088a67f37182c7910</sys_update_name>
        <sys_updated_by>maint</sys_updated_by>
        <sys_updated_on>2021-02-24 12:25:51</sys_updated_on>
    </sys_ux_data_broker_scriptlet>
    <sys_translated_text action="delete_multiple" query="documentkey=a90849dd9322201088a67f37182c7910"/>
</record_update>
